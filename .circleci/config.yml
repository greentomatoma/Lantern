version: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.3-node-browsers
      - image: circleci/mysql:5.7
        environment:
          MYSQL_DATABASE: lantern
          MYSQL_USER: lantern_user
          MYSQL_PASSWORD: lantern_pass
    environment:
      APP_ENV: testing
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: lantern
      DB_USERNAME: lantern_user
      DB_PASSWORD: lantern_pass
    steps:
      - checkout
      - run: sudo composer self-update --1
      - restore_cache:
          key: composer-v1-{{ checksum "./lantern/composer.lock" }}
      - run:
          name: Install PHP libraries
          command: composer install -n --prefer-dist --working-dir=./lantern
      - save_cache:
          key: composer-v1-{{ checksum "./lantern/composer.lock" }}
          paths:
            - vendor
      - restore_cache: 
          key: npm-v1-{{ checksum "./lantern/package-lock.json" }}
      - run:
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi 
          working_directory: ./lantern
      - save_cache: 
          key: npm-v1-{{ checksum "./lantern/package-lock.json" }}
          paths: 
            - node_modules
      - run:
          command: npm run dev
          working_directory: ./lantern
      - run:
          name: get ready for mysql
          command: |
            sudo apt-get update
            sudo apt-get install libpq-dev
            sudo docker-php-ext-install pdo_mysql
            dockerize -wait tcp://localhost:3306 -timeout 1m
      - run: 
          name: Migration & Seeding
          command: php artisan migrate --seed --env=testing
          working_directory: ./lantern
  deploy:
    docker:
      - image: circleci/php:7.3-node-browsers
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1
    steps:
      - checkout
      - run: sudo composer self-update --1
      - restore_cache:
          key: composer-no-dev-v1-{{ checksum "./lantern/composer.lock" }}
      - run: 
          command: composer install -n --no-dev --prefer-dist
          working_directory: ./lantern
      - save_cache:
          key: composer-no-dev-v1-{{ checksum "./lantern/composer.lock" }}
          paths:
            - vendor
      - restore_cache:
          key: npm-v1-{{ checksum "./lantern/package-lock.json" }}
      - run:
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi
          working_directory: ./lantern
      - save_cache:
          key: npm-v1-{{ checksum "./lantern/package-lock.json" }}
          paths:
            - node_modules
      - run:
          command: npm run prod
          working_directory: ./lantern
      - run:
          name: archive artifacts
          command: zip -ryq lantern.zip .
      - aws-cli/install
      - run:
          name: upload artifacts to s3
          command: aws s3 cp lantern.zip s3://${AWS_S3_BUCKET_NAME}
      - run:
          name: deploy to prod
          command: |
            aws deploy create-deployment \
            --application-name lantern \
            --deployment-group-name lantern \
            --s3-location bucket=${AWS_S3_BUCKET_NAME},key=lantern.zip,bundleType=zip
orbs:
  aws-cli: circleci/aws-cli@1.0.0
workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main